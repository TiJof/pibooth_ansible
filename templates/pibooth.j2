[GENERAL]
# User interface language: 'de', 'dk', 'en', 'es', 'fr', 'hu', 'nl' or 'no'
language = {{ general_pibooth_language }}

# Path to save pictures (list of quoted paths accepted)
directory = {{ general_pibooth_directory }}

# Start pibooth at Raspberry Pi startup
autostart = {{ general_pibooth_autostart }}

# In debug mode, exceptions are not caught, logs are more verbose, pictures are cleared at startup
debug = {{ general_pibooth_debug }}

# Path to custom plugin(s) not installed with pip (list of quoted paths accepted)
plugins = {{ general_pibooth_plugins }}

# Plugin names to be disabled after startup (list of quoted names accepted)
plugins_disabled = {{ general_pibooth_plugins_disabled }}

# Enable a virtual keyboard in the settings interface
vkeyboard = {{ general_pibooth_vkeyboard }}

[WINDOW]
# The (width, height) of the display window or 'fullscreen'
size = {{ window_pibooth_size }}

# Background RGB color or image path
background = {{ window_pibooth_background }}

# Text RGB color
text_color = {{ window_pibooth_text_color }}

# Blinking background when a capture is taken
flash = {{ window_pibooth_flash }}

# Animate the last taken picture by displaying captures one by one
animate = {{ window_pibooth_animate }}

# How long is displayed the capture in seconds before switching to the next one
animate_delay = {{ window_pibooth_animate_delay }}

# On 'finish' state: how long is displayed the final picture in seconds (0 if never shown)
finish_image_delay = {{ window_pibooth_finish_image_delay }}

# On 'wait' state: how long is displayed the final picture in seconds before being hidden (-1 if never hidden)
wait_picture_delay = {{ window_pibooth_wait_picture_delay }}

# How long is displayed the 'chosen' state:  (0 if never shown)
chosen_delay = {{ window_pibooth_chosen_delay }}

# Show arrows to indicate physical buttons: 'bottom', 'top', 'hidden' or 'touchscreen'
arrows = {{ window_pibooth_arrows }}

# Apply horizontal offset to arrows position
arrows_x_offset = {{ window_pibooth_arrows_x_offset }}

# How long is the preview in seconds
preview_delay = {{ window_pibooth_preview_delay }}

# Show a countdown timer during the preview
preview_countdown = {{ window_pibooth_preview_countdown }}

# Stop the preview before taking the capture
preview_stop_on_capture = {{ window_pibooth_preview_stop_on_capture }}

[PICTURE]
# Orientation of the final picture: 'auto', 'portrait' or 'landscape'
orientation = {{ picture_pibooth_orientation }}

# Possible choice(s) of captures numbers (numbers between 1 to 4)
captures = {{ picture_pibooth_captures }}

# Effect applied to the captures (list of quoted names accepted)
captures_effects = {{ picture_pibooth_captures_effects }}

# Crop each capture border in order to fit the paper size
captures_cropping = {{ picture_pibooth_captures_cropping }}

# Thick (in pixels) between captures and picture borders/texts
margin_thick = {{ picture_pibooth_margin_thick }}

# Main text displayed
footer_text1 = {{ picture_pibooth_footer_text1 }}

# Secondary text displayed
footer_text2 = {{ picture_pibooth_footer_text2 }}

# RGB colors used for footer texts (list of tuples accepted)
text_colors = {{ picture_pibooth_text_colors }}

# Fonts name or file path used for footer texts (list of quoted names accepted)
text_fonts = {{ picture_pibooth_text_fonts }}

# Alignments used for footer texts: 'left', 'center' or 'right' (list of quoted names accepted)
text_alignments = {{ picture_pibooth_text_alignments }}

# Overlay path (PNG file) with same aspect ratio than final picture (list of quoted paths accepted)
overlays = {{ picture_pibooth_overlays }}

# Background RGB color or image path (list of tuples or quoted paths accepted)
backgrounds = {{ picture_pibooth_backgrounds }}

# Pictures template path, it should contain 8 pages (4 capture numbers and 2 orientations)
# Required by 'picture-template' plugin
template = {{ picture_pibooth_template }}

[CAMERA]
# Adjust ISO for lighting issues, can be different for preview and capture (list of integers accepted)
iso = {{ camera_pibooth_iso }}

# Flip horizontally the capture
flip = {{ camera_pibooth_flip }}

# Rotation of the camera: 0, 90, 180 or 270, can be different for preview and capture (list of integers accepted)
rotation = {{ camera_pibooth_rotation }}

# Resolution for camera captures (preview will have same aspect ratio)
resolution = {{ camera_pibooth_resolution }}

# Delete captures from camera internal memory (when applicable)
delete_internal_memory = {{ camera_pibooth_delete_internal_memory }}

[PRINTER]
# Name of the printer defined in CUPS (or use the 'default' one)
printer_name = {{ printer_pibooth_printer_name }}

# Print options passed to the printer, shall be a valid Python dictionary
printer_options = {{ printer_pibooth_printer_options }}

# How long is the print view in seconds (0 to skip it)
printer_delay = {{ printer_pibooth_printer_delay }}

# Number of pages automatically sent to the printer (or use 'max' to reach max duplicate)
auto_print = {{ printer_pibooth_auto_print }}

# Maximum number of printed pages before warning on paper/ink levels (-1 = infinite)
max_pages = {{ printer_pibooth_max_pages }}

# Maximum number of duplicate pages sent to the printer (avoid paper waste)
max_duplicates = {{ printer_pibooth_max_duplicates }}

# Print 1, 2, 3 or 4 picture copies per page
pictures_per_page = {{ printer_pibooth_pictures_per_page }}

[CONTROLS]
# How long to press a single hardware button in seconds
debounce_delay = {{ controls_pibooth_debounce_delay }}

# How long to press multiple hardware buttons in seconds
multi_press_delay = {{ controls_pibooth_multi_press_delay }}

# Physical GPIO IN pin to take a picture
picture_btn_pin = {{ controls_pibooth_picture_btn_pin }}

# Physical GPIO OUT pin to light a LED when picture button is pressed
picture_led_pin = {{ controls_pibooth_picture_led_pin }}

# Physical GPIO IN pin to print a picture
print_btn_pin = {{ controls_pibooth_print_btn_pin }}

# Physical GPIO OUT pin to light a LED when print button is pressed
print_led_pin = {{ controls_pibooth_print_led_pin }}

# Physical GPIO OUT pin to light a LED at pibooth startup (list of pins accepted)
# Required by 'extra-lights' plugin
startup_led_pin = {{ controls_pibooth_startup_led_pin }}

# Physical GPIO OUT pin to light a LED during the entire capture sequence (list of pins accepted)
# Required by 'extra-lights' plugin
preview_led_pin = {{ controls_pibooth_preview_led_pin }}

# Physical GPIO OUT pin to light a LED when the capture is taken (list of pins accepted)
# Required by 'extra-lights' plugin
flash_led_pin = {{ controls_pibooth_flash_led_pin }}

[QRCODE]
# URL which may be composed of variables: {picture}, {count}
# Required by 'qrcode' plugin
prefix_url = {{ qrcode_pibooth_prefix_url }}

# Foreground color
# Required by 'qrcode' plugin
foreground = {{ qrcode_pibooth_foreground }}

# Background color
# Required by 'qrcode' plugin
background = {{ qrcode_pibooth_background }}

# Optional text displayed close to the QR code
# Required by 'qrcode' plugin
side_text = {{ qrcode_pibooth_side_text }}

# Offset (x, y) from location
# Required by 'qrcode' plugin
offset = {{ qrcode_pibooth_offset }}

# Location on 'wait' state: topleft, topright, bottomleft, bottomright, midtop-left, midtop-right, midbottom-left, midbottom-right
# Required by 'qrcode' plugin
wait_location = {{ qrcode_pibooth_wait_location }}

# Location on 'print' state: topleft, topright, bottomleft, bottomright, midtop-left, midtop-right, midbottom-left, midbottom-right
# Required by 'qrcode' plugin
print_location = {{ qrcode_pibooth_print_location }}

